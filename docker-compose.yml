services:
  # Docker-In-Docker (DinD) Service
  dind:
    image: docker:24.0-dind
    container_name: dind
    privileged: true
    user: root
    environment:
      - DOCKER_TLS_CERTDIR=/certs  # Enable TLS for Docker communication
    volumes:
      - docker-certs-ca:/certs/ca  # Certificate for Docker CA
      - docker-certs-client:/certs/client  # Client certificate for Jenkins
      - jenkins-data:/var/jenkins_home  # Persistent Jenkins data
    networks:
      jenkins-net:
        aliases:
          - docker  # Alias for Jenkins to access DinD via tcp://docker:2376

  # Jenkins Service
  jenkins:
    image: jenkins/jenkins:lts-jdk11
    container_name: jenkins
    user: root  # Allow Jenkins to run Docker commands
    environment:
      - DOCKER_HOST=tcp://docker:2376  # Jenkins connects to DinD using this address
      - DOCKER_CERT_PATH=/certs/client  # Path to Docker client certs in Jenkins
      - DOCKER_TLS_VERIFY=1  # Enable TLS verification for secure Docker communication
    volumes:
      - docker-certs-client:/certs/client:ro  # Mount client certs as read-only
      - jenkins-data:/var/jenkins_home  # Persistent Jenkins data storage
      - /usr/bin/docker:/usr/bin/docker  # Link Docker binary for Jenkins
    networks:
      - jenkins-net
    ports:
      - "8080:8080"  # Jenkins web UI
      - "50000:50000"  # Jenkins agent port
    restart: unless-stopped  # Ensure Jenkins restarts on failure or reboot

# Define volumes for data persistence
volumes:
  docker-certs-ca:  # Store CA certificates for Docker
  docker-certs-client:  # Store client certificates for Jenkins-Docker communication
  jenkins-data:  # Persistent Jenkins data

# Define the network used by Jenkins and DinD
networks:
  jenkins-net:
    driver: bridge
